<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.javademo.mbg.mapper.FailedJobsMapper">
  <resultMap id="BaseResultMap" type="com.example.javademo.mbg.model.FailedJobs">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="failed_at" jdbcType="TIMESTAMP" property="failedAt" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.javademo.mbg.model.FailedJobs">
    <result column="connection" jdbcType="LONGVARCHAR" property="connection" />
    <result column="queue" jdbcType="LONGVARCHAR" property="queue" />
    <result column="payload" jdbcType="LONGVARCHAR" property="payload" />
    <result column="exception" jdbcType="LONGVARCHAR" property="exception" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, failed_at
  </sql>
  <sql id="Blob_Column_List">
    connection, queue, payload, exception
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.example.javademo.mbg.model.FailedJobsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from failed_jobs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.example.javademo.mbg.model.FailedJobsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from failed_jobs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from failed_jobs
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from failed_jobs
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.javademo.mbg.model.FailedJobsExample">
    delete from failed_jobs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.javademo.mbg.model.FailedJobs">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into failed_jobs (failed_at, connection, queue, 
      payload, exception)
    values (#{failedAt,jdbcType=TIMESTAMP}, #{connection,jdbcType=LONGVARCHAR}, #{queue,jdbcType=LONGVARCHAR}, 
      #{payload,jdbcType=LONGVARCHAR}, #{exception,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.javademo.mbg.model.FailedJobs">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into failed_jobs
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="failedAt != null">
        failed_at,
      </if>
      <if test="connection != null">
        connection,
      </if>
      <if test="queue != null">
        queue,
      </if>
      <if test="payload != null">
        payload,
      </if>
      <if test="exception != null">
        exception,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="failedAt != null">
        #{failedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="connection != null">
        #{connection,jdbcType=LONGVARCHAR},
      </if>
      <if test="queue != null">
        #{queue,jdbcType=LONGVARCHAR},
      </if>
      <if test="payload != null">
        #{payload,jdbcType=LONGVARCHAR},
      </if>
      <if test="exception != null">
        #{exception,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.javademo.mbg.model.FailedJobsExample" resultType="java.lang.Long">
    select count(*) from failed_jobs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update failed_jobs
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.failedAt != null">
        failed_at = #{record.failedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.connection != null">
        connection = #{record.connection,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.queue != null">
        queue = #{record.queue,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.payload != null">
        payload = #{record.payload,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.exception != null">
        exception = #{record.exception,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update failed_jobs
    set id = #{record.id,jdbcType=BIGINT},
      failed_at = #{record.failedAt,jdbcType=TIMESTAMP},
      connection = #{record.connection,jdbcType=LONGVARCHAR},
      queue = #{record.queue,jdbcType=LONGVARCHAR},
      payload = #{record.payload,jdbcType=LONGVARCHAR},
      exception = #{record.exception,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update failed_jobs
    set id = #{record.id,jdbcType=BIGINT},
      failed_at = #{record.failedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.javademo.mbg.model.FailedJobs">
    update failed_jobs
    <set>
      <if test="failedAt != null">
        failed_at = #{failedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="connection != null">
        connection = #{connection,jdbcType=LONGVARCHAR},
      </if>
      <if test="queue != null">
        queue = #{queue,jdbcType=LONGVARCHAR},
      </if>
      <if test="payload != null">
        payload = #{payload,jdbcType=LONGVARCHAR},
      </if>
      <if test="exception != null">
        exception = #{exception,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.javademo.mbg.model.FailedJobs">
    update failed_jobs
    set failed_at = #{failedAt,jdbcType=TIMESTAMP},
      connection = #{connection,jdbcType=LONGVARCHAR},
      queue = #{queue,jdbcType=LONGVARCHAR},
      payload = #{payload,jdbcType=LONGVARCHAR},
      exception = #{exception,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.javademo.mbg.model.FailedJobs">
    update failed_jobs
    set failed_at = #{failedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>