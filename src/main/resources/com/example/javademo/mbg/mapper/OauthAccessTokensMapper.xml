<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.javademo.mbg.mapper.OauthAccessTokensMapper">
  <resultMap id="BaseResultMap" type="com.example.javademo.mbg.model.OauthAccessTokens">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="client_id" jdbcType="BIGINT" property="clientId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="revoked" jdbcType="BIT" property="revoked" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="expires_at" jdbcType="TIMESTAMP" property="expiresAt" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.javademo.mbg.model.OauthAccessTokens">
    <result column="scopes" jdbcType="LONGVARCHAR" property="scopes" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, client_id, name, revoked, created_at, updated_at, expires_at
  </sql>
  <sql id="Blob_Column_List">
    scopes
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.example.javademo.mbg.model.OauthAccessTokensExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from oauth_access_tokens
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.example.javademo.mbg.model.OauthAccessTokensExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from oauth_access_tokens
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from oauth_access_tokens
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from oauth_access_tokens
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.javademo.mbg.model.OauthAccessTokensExample">
    delete from oauth_access_tokens
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.javademo.mbg.model.OauthAccessTokens">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into oauth_access_tokens (user_id, client_id, name, 
      revoked, created_at, updated_at, 
      expires_at, scopes)
    values (#{userId,jdbcType=BIGINT}, #{clientId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, 
      #{revoked,jdbcType=BIT}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{expiresAt,jdbcType=TIMESTAMP}, #{scopes,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.javademo.mbg.model.OauthAccessTokens">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into oauth_access_tokens
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="clientId != null">
        client_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="revoked != null">
        revoked,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="expiresAt != null">
        expires_at,
      </if>
      <if test="scopes != null">
        scopes,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="clientId != null">
        #{clientId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="revoked != null">
        #{revoked,jdbcType=BIT},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="expiresAt != null">
        #{expiresAt,jdbcType=TIMESTAMP},
      </if>
      <if test="scopes != null">
        #{scopes,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.javademo.mbg.model.OauthAccessTokensExample" resultType="java.lang.Long">
    select count(*) from oauth_access_tokens
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update oauth_access_tokens
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.clientId != null">
        client_id = #{record.clientId,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.revoked != null">
        revoked = #{record.revoked,jdbcType=BIT},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.expiresAt != null">
        expires_at = #{record.expiresAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.scopes != null">
        scopes = #{record.scopes,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update oauth_access_tokens
    set id = #{record.id,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      client_id = #{record.clientId,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      revoked = #{record.revoked,jdbcType=BIT},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      expires_at = #{record.expiresAt,jdbcType=TIMESTAMP},
      scopes = #{record.scopes,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update oauth_access_tokens
    set id = #{record.id,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      client_id = #{record.clientId,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      revoked = #{record.revoked,jdbcType=BIT},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      expires_at = #{record.expiresAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.javademo.mbg.model.OauthAccessTokens">
    update oauth_access_tokens
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="clientId != null">
        client_id = #{clientId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="revoked != null">
        revoked = #{revoked,jdbcType=BIT},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="expiresAt != null">
        expires_at = #{expiresAt,jdbcType=TIMESTAMP},
      </if>
      <if test="scopes != null">
        scopes = #{scopes,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.javademo.mbg.model.OauthAccessTokens">
    update oauth_access_tokens
    set user_id = #{userId,jdbcType=BIGINT},
      client_id = #{clientId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      revoked = #{revoked,jdbcType=BIT},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      expires_at = #{expiresAt,jdbcType=TIMESTAMP},
      scopes = #{scopes,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.javademo.mbg.model.OauthAccessTokens">
    update oauth_access_tokens
    set user_id = #{userId,jdbcType=BIGINT},
      client_id = #{clientId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      revoked = #{revoked,jdbcType=BIT},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      expires_at = #{expiresAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>