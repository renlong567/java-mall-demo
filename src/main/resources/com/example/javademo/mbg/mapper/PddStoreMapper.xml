<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.javademo.mbg.mapper.PddStoreMapper">
  <resultMap id="BaseResultMap" type="com.example.javademo.mbg.model.PddStore">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="manager" jdbcType="VARCHAR" property="manager" />
    <result column="store_sn" jdbcType="VARCHAR" property="storeSn" />
    <result column="store_status" jdbcType="TINYINT" property="storeStatus" />
    <result column="client_id" jdbcType="VARCHAR" property="clientId" />
    <result column="client_secret" jdbcType="VARCHAR" property="clientSecret" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="access_token" jdbcType="VARCHAR" property="accessToken" />
    <result column="expires_at" jdbcType="INTEGER" property="expiresAt" />
    <result column="last_sync_at" jdbcType="INTEGER" property="lastSyncAt" />
    <result column="refresh_token" jdbcType="VARCHAR" property="refreshToken" />
    <result column="refresh_token_expires_at" jdbcType="INTEGER" property="refreshTokenExpiresAt" />
    <result column="sync_response" jdbcType="VARCHAR" property="syncResponse" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, manager, store_sn, store_status, client_id, client_secret, code, access_token, 
    expires_at, last_sync_at, refresh_token, refresh_token_expires_at, sync_response, 
    created_at, updated_at
  </sql>
  <select id="selectByExample" parameterType="com.example.javademo.mbg.model.PddStoreExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pdd_store
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pdd_store
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pdd_store
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.javademo.mbg.model.PddStoreExample">
    delete from pdd_store
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.javademo.mbg.model.PddStore">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pdd_store (name, manager, store_sn, 
      store_status, client_id, client_secret, 
      code, access_token, expires_at, 
      last_sync_at, refresh_token, refresh_token_expires_at, 
      sync_response, created_at, updated_at
      )
    values (#{name,jdbcType=VARCHAR}, #{manager,jdbcType=VARCHAR}, #{storeSn,jdbcType=VARCHAR}, 
      #{storeStatus,jdbcType=TINYINT}, #{clientId,jdbcType=VARCHAR}, #{clientSecret,jdbcType=VARCHAR}, 
      #{code,jdbcType=VARCHAR}, #{accessToken,jdbcType=VARCHAR}, #{expiresAt,jdbcType=INTEGER}, 
      #{lastSyncAt,jdbcType=INTEGER}, #{refreshToken,jdbcType=VARCHAR}, #{refreshTokenExpiresAt,jdbcType=INTEGER}, 
      #{syncResponse,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.javademo.mbg.model.PddStore">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pdd_store
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="manager != null">
        manager,
      </if>
      <if test="storeSn != null">
        store_sn,
      </if>
      <if test="storeStatus != null">
        store_status,
      </if>
      <if test="clientId != null">
        client_id,
      </if>
      <if test="clientSecret != null">
        client_secret,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="accessToken != null">
        access_token,
      </if>
      <if test="expiresAt != null">
        expires_at,
      </if>
      <if test="lastSyncAt != null">
        last_sync_at,
      </if>
      <if test="refreshToken != null">
        refresh_token,
      </if>
      <if test="refreshTokenExpiresAt != null">
        refresh_token_expires_at,
      </if>
      <if test="syncResponse != null">
        sync_response,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="manager != null">
        #{manager,jdbcType=VARCHAR},
      </if>
      <if test="storeSn != null">
        #{storeSn,jdbcType=VARCHAR},
      </if>
      <if test="storeStatus != null">
        #{storeStatus,jdbcType=TINYINT},
      </if>
      <if test="clientId != null">
        #{clientId,jdbcType=VARCHAR},
      </if>
      <if test="clientSecret != null">
        #{clientSecret,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="accessToken != null">
        #{accessToken,jdbcType=VARCHAR},
      </if>
      <if test="expiresAt != null">
        #{expiresAt,jdbcType=INTEGER},
      </if>
      <if test="lastSyncAt != null">
        #{lastSyncAt,jdbcType=INTEGER},
      </if>
      <if test="refreshToken != null">
        #{refreshToken,jdbcType=VARCHAR},
      </if>
      <if test="refreshTokenExpiresAt != null">
        #{refreshTokenExpiresAt,jdbcType=INTEGER},
      </if>
      <if test="syncResponse != null">
        #{syncResponse,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.javademo.mbg.model.PddStoreExample" resultType="java.lang.Long">
    select count(*) from pdd_store
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pdd_store
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.manager != null">
        manager = #{record.manager,jdbcType=VARCHAR},
      </if>
      <if test="record.storeSn != null">
        store_sn = #{record.storeSn,jdbcType=VARCHAR},
      </if>
      <if test="record.storeStatus != null">
        store_status = #{record.storeStatus,jdbcType=TINYINT},
      </if>
      <if test="record.clientId != null">
        client_id = #{record.clientId,jdbcType=VARCHAR},
      </if>
      <if test="record.clientSecret != null">
        client_secret = #{record.clientSecret,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.accessToken != null">
        access_token = #{record.accessToken,jdbcType=VARCHAR},
      </if>
      <if test="record.expiresAt != null">
        expires_at = #{record.expiresAt,jdbcType=INTEGER},
      </if>
      <if test="record.lastSyncAt != null">
        last_sync_at = #{record.lastSyncAt,jdbcType=INTEGER},
      </if>
      <if test="record.refreshToken != null">
        refresh_token = #{record.refreshToken,jdbcType=VARCHAR},
      </if>
      <if test="record.refreshTokenExpiresAt != null">
        refresh_token_expires_at = #{record.refreshTokenExpiresAt,jdbcType=INTEGER},
      </if>
      <if test="record.syncResponse != null">
        sync_response = #{record.syncResponse,jdbcType=VARCHAR},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pdd_store
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      manager = #{record.manager,jdbcType=VARCHAR},
      store_sn = #{record.storeSn,jdbcType=VARCHAR},
      store_status = #{record.storeStatus,jdbcType=TINYINT},
      client_id = #{record.clientId,jdbcType=VARCHAR},
      client_secret = #{record.clientSecret,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      access_token = #{record.accessToken,jdbcType=VARCHAR},
      expires_at = #{record.expiresAt,jdbcType=INTEGER},
      last_sync_at = #{record.lastSyncAt,jdbcType=INTEGER},
      refresh_token = #{record.refreshToken,jdbcType=VARCHAR},
      refresh_token_expires_at = #{record.refreshTokenExpiresAt,jdbcType=INTEGER},
      sync_response = #{record.syncResponse,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.javademo.mbg.model.PddStore">
    update pdd_store
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="manager != null">
        manager = #{manager,jdbcType=VARCHAR},
      </if>
      <if test="storeSn != null">
        store_sn = #{storeSn,jdbcType=VARCHAR},
      </if>
      <if test="storeStatus != null">
        store_status = #{storeStatus,jdbcType=TINYINT},
      </if>
      <if test="clientId != null">
        client_id = #{clientId,jdbcType=VARCHAR},
      </if>
      <if test="clientSecret != null">
        client_secret = #{clientSecret,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="accessToken != null">
        access_token = #{accessToken,jdbcType=VARCHAR},
      </if>
      <if test="expiresAt != null">
        expires_at = #{expiresAt,jdbcType=INTEGER},
      </if>
      <if test="lastSyncAt != null">
        last_sync_at = #{lastSyncAt,jdbcType=INTEGER},
      </if>
      <if test="refreshToken != null">
        refresh_token = #{refreshToken,jdbcType=VARCHAR},
      </if>
      <if test="refreshTokenExpiresAt != null">
        refresh_token_expires_at = #{refreshTokenExpiresAt,jdbcType=INTEGER},
      </if>
      <if test="syncResponse != null">
        sync_response = #{syncResponse,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.javademo.mbg.model.PddStore">
    update pdd_store
    set name = #{name,jdbcType=VARCHAR},
      manager = #{manager,jdbcType=VARCHAR},
      store_sn = #{storeSn,jdbcType=VARCHAR},
      store_status = #{storeStatus,jdbcType=TINYINT},
      client_id = #{clientId,jdbcType=VARCHAR},
      client_secret = #{clientSecret,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      access_token = #{accessToken,jdbcType=VARCHAR},
      expires_at = #{expiresAt,jdbcType=INTEGER},
      last_sync_at = #{lastSyncAt,jdbcType=INTEGER},
      refresh_token = #{refreshToken,jdbcType=VARCHAR},
      refresh_token_expires_at = #{refreshTokenExpiresAt,jdbcType=INTEGER},
      sync_response = #{syncResponse,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>